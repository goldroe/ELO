Buzz :: enum {
  NIL,
  FOO,
  BUZZ,
}

Foo :: struct {
 x: s32;
 y: s32;
}

Vector2 :: struct {
 x: f32;
 y: f32;
}

make_vector2 :: (s: f32) -> Vector2 {
 v: Vector2 = .{s, s};
 return v;
}

make_foo :: (x: s32, y: s32) -> Foo {
 foo: Foo;
 foo.x = x;
 foo.y = y;
 foo.y = foo.x;
 return foo;
}

fun :: (n: s32) -> s32 {
 x := 4;
 y := 10;
 z := x;
 return x + y + z;
}

main :: () {
 a := 0;
 b := -fun(10);
 c := make_foo(380, 1100);
 a = 1 + 1;

 ptr := *a;

 arr: [10]s32;
 arr[2] = 1;
 a = arr[10];

 n: s32;
 n = 10 + 3 + 1 * 2;
 return;
}
